"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
scalar Upload
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")
"Indicates what fields are available at the top level of a query operation."
type Query {
    users: [User!]! @all @guard
    user(id: ID! @eq): User @find @guard
    questions: [Question!]! @paginate(type: PAGINATOR) @orderBy(column: "created_at", direction: DESC) @guard
    allquestions: [Question!]! @all @guard
    question(id: ID! @eq): Question @find @guard
    answers: [Answer!]! @paginate(type: PAGINATOR) @orderBy(column: "created_at", direction: DESC) @guard
    answer(id: ID! @eq): Answer @find @guard
    order(slug: String! @eq): Order @find
    orders: [Order!]! @paginate(type: PAGINATOR) @guard @orderBy(column: "created_at", direction: DESC) 
    monthlyOrders: [MonthlyOrder!]! @guard
    percentageStatistics: PercentageStatistics @guard
    ordersStatistics: OrdersStatistics @guard
}

type OrdersStatistics {
    ordersHasAnswer: Int!
    ordersDosentHaveAnswer: Int!
}

type PercentageItem {
    currentMonth: Int!
    percentage: Float!
    status: String!
}

type PercentageStatistics {
    ordersPercentage: PercentageItem!
    answersPercentage: PercentageItem!
}


type MonthlyOrder {
    month: String!
    total: Int!
}

type User {
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Question {
    id: ID!
    text: String!
    type: String!
    choices: [String!]
    user_id: ID
    user: User @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

type Order {
    id: ID!
    name: String!
    phone: String!
    product_name: String
    slug: String
    image: String
    user_id: ID
    user: User @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

type Answer {
    id: ID!
    order_id: ID!
    phone: String
    created_at: DateTime!
    updated_at: DateTime!
    answersQuestions: [AnswerQuestion!]! @hasMany
    order: Order @belongsTo
}

type AnswerQuestion {
    id: ID!
    answer_id: ID!
    text_answer: String
    question_id: ID!
    question: Question @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

input AnswerInput {
    question_id: ID!
    type: String!
    answer: String!
}

type MessageResponse {
    message: String
}

type Mutation {
    createUser(name: String!, email: String!, password: String!): User

    createQuestion(
        text: String!
        type: String! @rules(apply: ["in:rating,choice,text"])
        choices: [String!]
    ): Question @guard

    createOrder(name: String!, phone: String!, image: Upload, product_name: String!): Order @guard

    createAnswer(phone: String, answersQuestions: [AnswerInput!]!, order_id: ID!): Answer

    updateUser(
        id: ID! @rules(apply: ["exists:users,id"])
        name: String @rules(apply: ["string", "max:255"])
        email: String
            @rules(apply: ["string", "email", "max:255", "unique:users,email"])
        password: String @rules(apply: ["string", "min:8"])
    ): User @guard

    updateQuestion(
        id: ID! @rules(apply: ["exists:questions,id"])
        text: String @rules(apply: ["string", "max:255"])
        type: String @rules(apply: ["in:rating,choice,text"])
        choices: [String!]
    ): Question @guard

    updateOrder(
        id: ID! @rules(apply: ["exists:orders,id"])
        name: String @rules(apply: ["string", "max:255"])
        phone: String @rules(apply: ["string", "phone:EG"])
        product_name: String @rules(apply: ["string", "max:255"])
        image: Upload @rules(apply: ["image","mimes:jpeg,png,jpg,gif,svg","max:6048"])
    ): Order @guard

    deleteUser(id: ID! @rules(apply: ["exists:users,id"])): MessageResponse
        @guard

    deleteQuestion(
        id: ID! @rules(apply: ["exists:questions,id"])
    ): MessageResponse @guard

    deleteOrder(id: ID! @rules(apply: ["exists:orders,id"])): MessageResponse
        @guard

    deleteAnswer(id: ID! @rules(apply: ["exists:answers,id"])): MessageResponse
        @guard
}
